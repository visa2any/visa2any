'use client'

import { useState, useRef, useEffect } from 'react'
import { Button } from '@/components/ui/button'
import { MessageCircle, X, Send, Bot, User, Phone, Calendar, FileText, Globe } from 'lucide-react'

interface Message {
  id: string
  text: string
  isBot: boolean
  timestamp: Date
  options?: ChatOption[]
}

interface ChatOption {
  id: string
  text: string
  action: () => void
}

interface UserData {
  name?: string
  email?: string
  phone?: string
  country?: string
  visaType?: string
  timeline?: string
}

export default function ChatBot() {
  const [isOpen, setIsOpen] = useState(false)
  const [messages, setMessages] = useState<Message[]>([])
  const [inputValue, setInputValue] = useState('')
  const [isTyping, setIsTyping] = useState(false)
  const [currentStep, setCurrentStep] = useState('welcome')
  const [userData, setUserData] = useState<UserData>({})
  const [showQuickActions, setShowQuickActions] = useState(true)
  const [isHidden, setIsHidden] = useState(false) // Esconder durante an√°lises
  const messagesEndRef = useRef<HTMLDivElement>(null)

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })
  }

  useEffect(() => {
    scrollToBottom()
  }, [messages])

  // Escutar eventos para esconder ChatBot durante an√°lises
  useEffect(() => {
    const handleHideChatBot = () => setIsHidden(true)
    const handleShowChatBot = () => setIsHidden(false)

    window.addEventListener('hideChatBot', handleHideChatBot)
    window.addEventListener('showChatBot', handleShowChatBot)

    return () => {
      window.removeEventListener('hideChatBot', handleHideChatBot)
      window.removeEventListener('showChatBot', handleShowChatBot)
    }
  }, [])

  useEffect(() => {
    if (isOpen && messages.length === 0) {
      // Mensagem de boas-vindas
      setTimeout(() => {
        addBotMessage(
          "üëã Ol√°! Sou a Sofia, assistente virtual da Visa2Any. Estou aqui para ajudar voc√™ a realizar seu sonho internacional! Como posso te ajudar hoje?",
          getWelcomeOptions()
        )
      }, 500)
    }
  }, [isOpen])

  const addBotMessage = (text: string, options?: ChatOption[]) => {
    setIsTyping(true)
    setTimeout(() => {
      const newMessage: Message = {
        id: Date.now().toString(),
        text,
        isBot: true,
        timestamp: new Date(),
        options
      }
      setMessages(prev => [...prev, newMessage])
      setIsTyping(false)
    }, 1000)
  }

  const addUserMessage = (text: string) => {
    const newMessage: Message = {
      id: Date.now().toString(),
      text,
      isBot: false,
      timestamp: new Date()
    }
    setMessages(prev => [...prev, newMessage])
  }

  const getWelcomeOptions = (): ChatOption[] => [
    {
      id: 'visa-info',
      text: 'üåç Quero informa√ß√µes sobre vistos',
      action: () => handleVisaInquiry()
    },
    {
      id: 'eligibility',
      text: 'üìã Verificar minha elegibilidade',
      action: () => handleEligibilityCheck()
    },
    {
      id: 'consultation',
      text: 'üí¨ Agendar consultoria gratuita',
      action: () => handleConsultationRequest()
    },
    {
      id: 'speak-human',
      text: 'üë®‚Äçüíº Falar com especialista',
      action: () => handleHumanAgent()
    }
  ]

  const getVisaTypeOptions = (): ChatOption[] => [
    {
      id: 'tourism',
      text: 'üèñÔ∏è Visto de Turismo',
      action: () => handleVisaTypeSelection('turismo')
    },
    {
      id: 'work',
      text: 'üíº Visto de Trabalho',
      action: () => handleVisaTypeSelection('trabalho')
    },
    {
      id: 'study',
      text: 'üéì Visto de Estudo',
      action: () => handleVisaTypeSelection('estudo')
    },
    {
      id: 'investment',
      text: 'üí∞ Visto de Investimento',
      action: () => handleVisaTypeSelection('investimento')
    }
  ]

  const getCountryOptions = (): ChatOption[] => [
    {
      id: 'usa',
      text: 'üá∫üá∏ Estados Unidos',
      action: () => handleCountrySelection('Estados Unidos')
    },
    {
      id: 'canada',
      text: 'üá®üá¶ Canad√°',
      action: () => handleCountrySelection('Canad√°')
    },
    {
      id: 'australia',
      text: 'üá¶üá∫ Austr√°lia', 
      action: () => handleCountrySelection('Austr√°lia')
    },
    {
      id: 'europe',
      text: 'üá™üá∫ Uni√£o Europeia',
      action: () => handleCountrySelection('Uni√£o Europeia')
    },
    {
      id: 'other',
      text: 'üåè Outro pa√≠s',
      action: () => handleCountrySelection('Outro')
    }
  ]

  const handleVisaInquiry = () => {
    addUserMessage('Quero informa√ß√µes sobre vistos')
    addBotMessage(
      "Perfeito! Para te dar as melhores informa√ß√µes, qual tipo de visto voc√™ est√° interessado?",
      getVisaTypeOptions()
    )
    setCurrentStep('visa-type')
  }

  const handleEligibilityCheck = () => {
    addUserMessage('Verificar minha elegibilidade')
    addBotMessage(
      "√ìtima escolha! Vou fazer algumas perguntas para avaliar seu perfil. Primeiro, qual seu nome?"
    )
    setCurrentStep('collect-name')
  }

  const handleConsultationRequest = () => {
    addUserMessage('Agendar consultoria gratuita')
    addBotMessage(
      "Excelente! Oferecemos dois tipos de consultoria gratuita:",
      [
        {
          id: 'ai-consultation',
          text: 'ü§ñ Consultoria IA (30min) - Imediata',
          action: () => handleAIConsultation()
        },
        {
          id: 'human-consultation', 
          text: 'üë®‚Äçüíº Consultoria Humana - Agendada',
          action: () => handleHumanConsultation()
        }
      ]
    )
  }

  const handleAIConsultation = () => {
    addUserMessage('Consultoria IA (30min) - Imediata')
    addBotMessage(
      "Perfeita escolha! Nossa IA Sofia far√° uma an√°lise completa de 30 minutos do seu perfil. Voc√™ receber√°:\n\n" +
      "‚úÖ Score de elegibilidade personalizado\n" +
      "‚úÖ Lista de documentos necess√°rios\n" +
      "‚úÖ Timeline e custos estimados\n" +
      "‚úÖ Relat√≥rio PDF completo\n\n" +
      "Vamos come√ßar agora mesmo?",
      [
        {
          id: 'start-ai-consultation',
          text: 'üöÄ Come√ßar Consultoria IA Agora',
          action: () => window.open('/consultoria-ia', '_blank')
        },
        {
          id: 'learn-more-ai',
          text: '‚ÑπÔ∏è Quero saber mais sobre a IA',
          action: () => handleLearnMoreAI()
        }
      ]
    )
  }

  const handleHumanConsultation = () => {
    addUserMessage('Consultoria Humana - Agendada')
    addBotMessage(
      "√ìtima op√ß√£o! Nossos especialistas humanos oferecem consultoria para casos mais complexos ou quando voc√™ prefere atendimento personalizado. Para agendar, preciso de alguns dados b√°sicos. Qual seu nome?"
    )
    setCurrentStep('collect-name-consultation')
  }

  const handleLearnMoreAI = () => {
    addUserMessage('Quero saber mais sobre a IA')
    addBotMessage(
      "ü§ñ **Nossa IA Sofia** √© especializada em imigra√ß√£o com:\n\n" +
      "‚Ä¢ **Algoritmo propriet√°rio** que analisa +50 vari√°veis\n" +
      "‚Ä¢ **Base de dados** de 10.000+ casos de sucesso\n" +
      "‚Ä¢ **Precis√£o de 95%** em predi√ß√µes de elegibilidade\n" +
      "‚Ä¢ **Atualiza√ß√£o constante** com mudan√ßas nas leis\n\n" +
      "Se o caso for complexo, a pr√≥pria IA recomenda escala√ß√£o para humano.\n\n" +
      "Gostaria de testar agora?",
      [
        {
          id: 'test-ai-now',
          text: '‚ú® Sim, vamos testar!',
          action: () => window.open('/consultoria-ia', '_blank')
        },
        {
          id: 'human-instead',
          text: 'üë®‚Äçüíº Prefiro consultoria humana',
          action: () => handleHumanConsultation()
        }
      ]
    )
  }

  const handleHumanAgent = () => {
    addUserMessage('Falar com especialista')
    addBotMessage(
      "Claro! Vou te conectar com um especialista agora. Enquanto isso, voc√™ pode me dar seu WhatsApp para que ele entre em contato?",
      [
        {
          id: 'whatsapp',
          text: 'üì± Enviar WhatsApp',
          action: () => window.open('https://wa.me/5511999999999?text=Ol√°! Vim do site da Visa2Any e gostaria de falar com um especialista sobre vistos.', '_blank')
        },
        {
          id: 'phone',
          text: 'üìû Liga√ß√£o',
          action: () => window.open('tel:+5511999999999')
        }
      ]
    )
  }

  const handleVisaTypeSelection = (type: string) => {
    setUserData(prev => ({ ...prev, visaType: type }))
    addUserMessage(`Visto de ${type}`)
    addBotMessage(
      `Excelente escolha! O visto de ${type} √© uma das nossas especialidades. Para qual pa√≠s voc√™ gostaria de viajar?`,
      getCountryOptions()
    )
    setCurrentStep('country-selection')
  }

  const handleCountrySelection = (country: string) => {
    setUserData(prev => ({ ...prev, country }))
    addUserMessage(country)
    
    const visaType = userData.visaType || 'este tipo de visto'
    addBotMessage(
      `Perfeito! ${country} √© um destino muito procurado para ${visaType}. ` +
      `Nossa taxa de aprova√ß√£o para ${country} √© de 98%! ` +
      `Gostaria de uma an√°lise gratuita do seu perfil agora mesmo?`,
      [
        {
          id: 'free-analysis',
          text: '‚úÖ Sim, quero an√°lise gratuita',
          action: () => handleFreeAnalysis()
        },
        {
          id: 'schedule',
          text: 'üìÖ Prefiro agendar consulta',
          action: () => handleConsultationRequest()
        },
        {
          id: 'more-info',
          text: '‚ÑπÔ∏è Quero mais informa√ß√µes',
          action: () => handleMoreInfo()
        }
      ]
    )
  }

  const handleFreeAnalysis = () => {
    addUserMessage('Sim, quero an√°lise gratuita')
    addBotMessage(
      "Fant√°stico! Para fazer sua an√°lise personalizada, preciso de alguns dados. Qual seu nome completo?"
    )
    setCurrentStep('collect-name-analysis')
  }

  const handleMoreInfo = () => {
    addUserMessage('Quero mais informa√ß√µes')
    const country = userData.country || 'este pa√≠s'
    const visaType = userData.visaType || 'este visto'
    
    addBotMessage(
      `üìã **Informa√ß√µes sobre ${visaType} para ${country}:**\n\n` +
      `‚úÖ **Taxa de aprova√ß√£o:** 98%\n` +
      `‚è±Ô∏è **Tempo de processamento:** 15-30 dias\n` +
      `üìÑ **Documentos necess√°rios:** An√°lise personalizada\n` +
      `üí∞ **Investimento:** A partir de R$ 2.500\n\n` +
      `Gostaria de agendar uma consultoria gratuita para discutir seu caso espec√≠fico?`,
      [
        {
          id: 'schedule-now',
          text: 'üìÖ Agendar agora',
          action: () => handleConsultationRequest()
        },
        {
          id: 'whatsapp-info',
          text: 'üì± Receber por WhatsApp',
          action: () => window.open('https://wa.me/5511999999999?text=Quero receber informa√ß√µes sobre vistos e assessoria internacional.', '_blank')
        }
      ]
    )
  }

  const getIntelligentResponse = (message: string) => {
    const lowerMessage = message.toLowerCase()
    
    // An√°lise de sentimento e inten√ß√£o
    const keywords = {
      pricing: ['pre√ßo', 'valor', 'custo', 'quanto', 'custa', 'barato', 'caro', 'investimento', 'pagar'],
      time: ['tempo', 'prazo', 'demora', 'rapidez', 'quanto tempo', 'quando', 'urgente', 'r√°pido'],
      documents: ['documento', 'papel', 'certid√£o', 'passaporte', 'rg', 'comprovante', 'exig√™ncia'],
      countries: ['eua', 'estados unidos', 'canad√°', 'canada', 'portugal', 'austr√°lia', 'alemanha', 'fran√ßa', 'italia'],
      visa_types: ['turismo', 'trabalho', 'estudo', 'estudar', 'trabalhar', 'investimento', 'neg√≥cio'],
      success: ['aprovado', 'conseguiu', 'deu certo', 'sucesso', 'aprova√ß√£o', 'taxa'],
      difficulty: ['dif√≠cil', 'complicado', 'problema', 'negado', 'rejeitado', 'dificuldade'],
      urgent: ['urgente', 'emerg√™ncia', 'r√°pido', 'pressa', 'logo'],
      help: ['ajuda', 'socorro', 'n√£o sei', 'perdido', 'confuso', 'd√∫vida']
    }

    // Detectar inten√ß√£o principal
    let intent = 'general'
    let confidence = 0
    
    for (const [key, words] of Object.entries(keywords)) {
      const matches = words.filter(word => lowerMessage.includes(word)).length
      const score = matches / words.length
      if (score > confidence) {
        confidence = score
        intent = key
      }
    }

    // Respostas inteligentes baseadas na inten√ß√£o
    switch (intent) {
      case 'pricing':
        return {
          text: "üí∞ **Nossos pre√ßos s√£o transparentes e competitivos:**\n\n" +
                "üÜì **An√°lise Gratuita** - Come√ße sem gastar nada\n" +
                "üìÑ **Relat√≥rio Premium** - R$ 97 a R$ 497 (varia por pa√≠s)\n" +
                "üë®‚Äçüíº **Consultoria 1:1** - R$ 297 a R$ 797\n" +
                "üëë **Servi√ßo VIP** - R$ 1.497 a R$ 4.997\n\n" +
                "üí° O pre√ßo varia conforme pa√≠s e complexidade. Quer uma cota√ß√£o espec√≠fica?",
          options: [
            { id: 'pricing-calc', text: 'üßÆ Calcular meu pre√ßo', action: () => window.open('/precos', '_blank') },
            { id: 'free-analysis', text: 'üÜì Come√ßar gr√°tis', action: () => window.open('/consultoria-ia', '_blank') }
          ]
        }

      case 'time':
        return {
          text: "‚è∞ **Nossos prazos otimizados:**\n\n" +
                "üöÄ **An√°lise IA**: 15 minutos\n" +
                "üìã **Relat√≥rio Premium**: Imediato\n" +
                "üë®‚Äçüíº **Consultoria**: Agendamento em 24h\n" +
                "üìÑ **Prep. Documentos**: 7-15 dias\n" +
                "üèõÔ∏è **Processamento Oficial**: 15-45 dias (gov.)\n\n" +
                "üí° Processos urgentes t√™m prioridade no servi√ßo VIP!",
          options: [
            { id: 'urgent-service', text: 'üö® Servi√ßo Urgente', action: () => handleVipService() },
            { id: 'normal-timeline', text: 'üìÖ Timeline Normal', action: () => handleConsultationRequest() }
          ]
        }

      case 'documents':
        return {
          text: "üìã **Documentos variam por pa√≠s e tipo de visto:**\n\n" +
                "üá∫üá∏ **EUA**: Passaporte, DS-160, foto, comprovantes financeiros\n" +
                "üá®üá¶ **Canad√°**: Passaporte, formul√°rios, biometria, exames\n" +
                "üáµüáπ **Portugal**: Passaporte, PB4, comprovantes, seguro\n\n" +
                "üìä Nossa an√°lise identifica EXATAMENTE quais voc√™ precisa!",
          options: [
            { id: 'doc-analysis', text: 'üìã Ver meus documentos', action: () => handleEligibilityCheck() },
            { id: 'doc-templates', text: 'üìÑ Templates gratuitos', action: () => handleDownloadGuide() }
          ]
        }

      case 'countries':
        const country = detectCountry(lowerMessage)
        return {
          text: `üåç **${country || 'Pa√≠s de interesse'}:**\n\n` +
                "‚úÖ Temos especialistas para todos os destinos\n" +
                "üìä Taxa de aprova√ß√£o m√©dia: 95%\n" +
                "üéØ Estrat√©gias personalizadas por pa√≠s\n" +
                "üìû Consultores nativos dispon√≠veis\n\n" +
                "Quer saber sua elegibilidade espec√≠fica?",
          options: [
            { id: 'country-analysis', text: `üéØ Analisar para ${country}`, action: () => handleEligibilityCheck() },
            { id: 'country-info', text: 'üìö Informa√ß√µes detalhadas', action: () => handleMoreInfo() }
          ]
        }

      case 'success':
        return {
          text: "üèÜ **Nossa taxa de sucesso √© excepcional:**\n\n" +
                "‚úÖ **95% de aprova√ß√£o geral**\n" +
                "üá∫üá∏ EUA: 92% | üá®üá¶ Canad√°: 97% | üáµüáπ Portugal: 98%\n" +
                "üéØ **+10.000 vistos aprovados**\n" +
                "‚≠ê 4.9/5 estrelas de satisfa√ß√£o\n\n" +
                "Nossa metodologia comprovada maximiza suas chances!",
          options: [
            { id: 'testimonials', text: 'üí¨ Ver depoimentos', action: () => window.open('/#depoimentos', '_blank') },
            { id: 'start-process', text: 'üöÄ Come√ßar agora', action: () => handleEligibilityCheck() }
          ]
        }

      case 'difficulty':
        return {
          text: "üò∞ **Casos complexos s√£o nossa especialidade:**\n\n" +
                "üîß Perfis desafiadores: Nossa expertise\n" +
                "üìà Estrat√©gias de fortalecimento\n" +
                "üéØ Abordagens alternativas\n" +
                "üë®‚Äçüíº Consultores senior especializados\n\n" +
                "üìû N√£o desista! Vamos encontrar uma solu√ß√£o juntos.",
          options: [
            { id: 'complex-case', text: 'üÜò Caso complexo', action: () => handleComplexCase() },
            { id: 'specialist-call', text: 'üìû Falar com especialista', action: () => handleHumanAgent() }
          ]
        }

      case 'urgent':
        return {
          text: "üö® **Casos urgentes - Servi√ßo Expresso:**\n\n" +
                "‚ö° Prioridade m√°xima\n" +
                "üìû Atendimento imediato\n" +
                "üèÉ‚Äç‚ôÇÔ∏è Processamento acelerado\n" +
                "üìã Documenta√ß√£o expressa\n\n" +
                "üí° Servi√ßo VIP garante m√°xima agilidade!",
          options: [
            { id: 'urgent-vip', text: 'üö® Servi√ßo VIP Urgente', action: () => handleVipService() },
            { id: 'urgent-call', text: 'üìû Ligar agora', action: () => window.open('tel:+5511999999999') }
          ]
        }

      case 'help':
        return {
          text: "ü§ù **Estou aqui para te guiar:**\n\n" +
                "1Ô∏è‚É£ **Primeiro**: An√°lise gratuita (15min)\n" +
                "2Ô∏è‚É£ **Segundo**: Relat√≥rio personalizado\n" +
                "3Ô∏è‚É£ **Terceiro**: Consultoria especializada\n" +
                "4Ô∏è‚É£ **Quarto**: Execu√ß√£o completa\n\n" +
                "üìû Ou fale direto com um humano!",
          options: [
            { id: 'step-by-step', text: 'üë£ Guia passo a passo', action: () => handleStepByStep() },
            { id: 'human-help', text: 'üôã‚Äç‚ôÇÔ∏è Falar com humano', action: () => handleHumanAgent() }
          ]
        }

      default:
        return {
          text: "ü§ñ **Sou Sofia, sua assistente de imigra√ß√£o!**\n\n" +
                "Posso te ajudar com:\n" +
                "üåç Informa√ß√µes sobre qualquer pa√≠s\n" +
                "üìã An√°lise de elegibilidade\n" +
                "üí∞ Cota√ß√µes personalizadas\n" +
                "üìÖ Agendamento de consultorias\n\n" +
                "O que voc√™ gostaria de saber?",
          options: getWelcomeOptions()
        }
    }
  }

  const detectCountry = (message: string) => {
    const countries = {
      'eua': 'EUA', 'estados unidos': 'EUA', 'america': 'EUA',
      'canada': 'Canad√°', 'canad√°': 'Canad√°',
      'portugal': 'Portugal', 'portugu√™s': 'Portugal',
      'australia': 'Austr√°lia', 'austr√°lia': 'Austr√°lia',
      'alemanha': 'Alemanha', 'germany': 'Alemanha',
      'fran√ßa': 'Fran√ßa', 'france': 'Fran√ßa',
      'italia': 'It√°lia', 'italy': 'It√°lia'
    }
    
    for (const [key, value] of Object.entries(countries)) {
      if (message.includes(key)) return value
    }
    return null
  }

  const handleVipService = () => {
    addUserMessage('Servi√ßo VIP')
    addBotMessage(
      "üëë **Servi√ßo VIP - Fazemos tudo para voc√™:**\n\n" +
      "‚úÖ Prepara√ß√£o completa de documentos\n" +
      "‚úÖ Submiss√£o da aplica√ß√£o\n" +
      "‚úÖ Acompanhamento at√© aprova√ß√£o\n" +
      "‚úÖ Suporte ilimitado 24/7\n" +
      "‚úÖ Garantia de retrabalho\n\n" +
      "üìû Conectando com especialista VIP...",
      [
        { id: 'vip-pricing', text: 'üíé Ver pre√ßos VIP', action: () => window.open('/precos', '_blank') },
        { id: 'vip-call', text: 'üìû Ligar para VIP', action: () => window.open('tel:+5511999999999') }
      ]
    )
  }

  const handleComplexCase = () => {
    addUserMessage('Caso complexo')
    addBotMessage(
      "üîß **Casos complexos s√£o nossa especialidade:**\n\n" +
      "üìä An√°lise detalhada do seu hist√≥rico\n" +
      "üéØ Estrat√©gias espec√≠ficas para seu perfil\n" +
      "üìà Plano de fortalecimento personalizado\n" +
      "üë®‚Äçüíº Consultores senior especializados\n\n" +
      "Vamos encontrar a melhor solu√ß√£o juntos!",
      [
        { id: 'complex-analysis', text: 'üîç An√°lise especializada', action: () => handleEligibilityCheck() },
        { id: 'senior-consultant', text: 'üë®‚Äçüíº Consultor senior', action: () => handleHumanAgent() }
      ]
    )
  }

  const handleStepByStep = () => {
    addUserMessage('Guia passo a passo')
    addBotMessage(
      "üë£ **Seu caminho para o visto:**\n\n" +
      "üÜì **PASSO 1**: An√°lise gratuita (15min)\n" +
      "üìÑ **PASSO 2**: Relat√≥rio premium detalhado\n" +
      "üë®‚Äçüíº **PASSO 3**: Consultoria especializada\n" +
      "üìã **PASSO 4**: Prepara√ß√£o documentos\n" +
      "‚úàÔ∏è **PASSO 5**: Seu visto aprovado!\n\n" +
      "Vamos come√ßar pelo primeiro passo?",
      [
        { id: 'start-step1', text: 'üöÄ Come√ßar PASSO 1', action: () => window.open('/consultoria-ia', '_blank') },
        { id: 'see-all-steps', text: 'üëÄ Ver todos os passos', action: () => window.open('/', '_blank') }
      ]
    )
  }

  const handleSendMessage = () => {
    if (!inputValue.trim()) return

    addUserMessage(inputValue)
    const message = inputValue.toLowerCase()
    
    // Processamento inteligente baseado no step atual
    if (currentStep === 'collect-name' || currentStep === 'collect-name-consultation' || currentStep === 'collect-name-analysis') {
      setUserData(prev => ({ ...prev, name: inputValue }))
      addBotMessage(
        `Prazer em conhecer voc√™, ${inputValue}! Agora, qual seu melhor email?`
      )
      setCurrentStep('collect-email')
    } else if (currentStep === 'collect-email') {
      setUserData(prev => ({ ...prev, email: inputValue }))
      addBotMessage(
        "Perfeito! E qual seu WhatsApp para eu te enviar as informa√ß√µes?"
      )
      setCurrentStep('collect-phone')
    } else if (currentStep === 'collect-phone') {
      setUserData(prev => ({ ...prev, phone: inputValue }))
      addBotMessage(
        `Excelente, ${userData.name}! Tenho todos os dados necess√°rios. ` +
        `Um especialista entrar√° em contato em at√© 2 horas. ` +
        `Enquanto isso, que tal agendar sua consultoria gratuita?`,
        [
          {
            id: 'schedule-consultation',
            text: 'üìÖ Agendar consultoria',
            action: () => window.open('/agendamento', '_blank')
          },
          {
            id: 'download-guide',
            text: 'üìö Baixar guia gratuito',
            action: () => handleDownloadGuide()
          }
        ]
      )
      setCurrentStep('completed')
    } else {
      // Usar resposta inteligente
      const response = getIntelligentResponse(message)
      addBotMessage(response.text, response.options)
    }

    setInputValue('')
  }

  const handleDownloadGuide = () => {
    addUserMessage('Baixar guia gratuito')
    addBotMessage(
      "üìö Perfeito! Estou enviando o **'Guia Completo de Vistos 2024'** para seu email. " +
      "Voc√™ receber√° em alguns minutos com tudo que precisa saber!"
    )
    // Aqui integraria com sistema de email marketing
  }

  const quickActions = [
    { icon: Globe, text: 'Vistos', action: () => handleVisaInquiry() },
    { icon: FileText, text: 'Elegibilidade', action: () => handleEligibilityCheck() },
    { icon: Calendar, text: 'Agendar', action: () => handleConsultationRequest() },
    { icon: Phone, text: 'Contato', action: () => handleHumanAgent() }
  ]

  // N√£o renderizar se ChatBot estiver escondido
  if (isHidden) return null

  return (
    <>
      {/* Chat Button */}
      {!isOpen && (
        <button
          onClick={() => setIsOpen(true)}
          className="fixed bottom-6 right-6 bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4 rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-200 z-50 animate-pulse"
        >
          <MessageCircle className="h-6 w-6" />
        </button>
      )}

      {/* Chat Window */}
      {isOpen && (
        <div className="fixed bottom-6 right-6 w-96 h-[500px] bg-white rounded-2xl shadow-2xl z-50 flex flex-col">
          {/* Header */}
          <div className="bg-gradient-to-r from-blue-600 to-purple-600 text-white p-4 rounded-t-2xl flex items-center justify-between">
            <div className="flex items-center">
              <div className="w-8 h-8 bg-white rounded-full flex items-center justify-center mr-3">
                <Bot className="h-5 w-5 text-blue-600" />
              </div>
              <div>
                <div className="font-semibold">Sofia - Assistente IA</div>
                <div className="text-xs opacity-90">üü¢ Online ‚Ä¢ Resposta em segundos</div>
              </div>
            </div>
            <button
              onClick={() => setIsOpen(false)}
              className="text-white hover:bg-white/20 p-1 rounded"
            >
              <X className="h-5 w-5" />
            </button>
          </div>

          {/* Messages */}
          <div className="flex-1 overflow-y-auto p-4 space-y-4">
            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex ${message.isBot ? 'justify-start' : 'justify-end'}`}
              >
                <div
                  className={`max-w-[80%] p-3 rounded-2xl ${
                    message.isBot
                      ? 'bg-gray-100 text-gray-800'
                      : 'bg-gradient-to-r from-blue-600 to-purple-600 text-white'
                  }`}
                >
                  {message.isBot && (
                    <div className="flex items-center mb-1">
                      <Bot className="h-4 w-4 mr-1" />
                      <span className="text-xs font-medium">Sofia</span>
                    </div>
                  )}
                  <div className="whitespace-pre-line">{message.text}</div>
                  
                  {/* Options */}
                  {message.options && (
                    <div className="mt-3 space-y-2">
                      {message.options.map((option) => (
                        <button
                          key={option.id}
                          onClick={option.action}
                          className="block w-full text-left p-2 bg-blue-50 hover:bg-blue-100 rounded-lg text-sm transition-colors"
                        >
                          {option.text}
                        </button>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            ))}
            
            {/* Typing indicator */}
            {isTyping && (
              <div className="flex justify-start">
                <div className="bg-gray-100 p-3 rounded-2xl">
                  <div className="flex items-center">
                    <Bot className="h-4 w-4 mr-1" />
                    <span className="text-xs font-medium mr-2">Sofia</span>
                    <div className="flex space-x-1">
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{animationDelay: '0.1s'}}></div>
                      <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{animationDelay: '0.2s'}}></div>
                    </div>
                  </div>
                </div>
              </div>
            )}
            
            <div ref={messagesEndRef} />
          </div>

          {/* Quick Actions */}
          {showQuickActions && messages.length === 0 && (
            <div className="p-4 border-t">
              <div className="text-xs text-gray-500 mb-2">A√ß√µes r√°pidas:</div>
              <div className="grid grid-cols-2 gap-2">
                {quickActions.map((action, index) => (
                  <button
                    key={index}
                    onClick={action.action}
                    className="flex items-center p-2 bg-gray-50 hover:bg-gray-100 rounded-lg text-xs transition-colors"
                  >
                    <action.icon className="h-4 w-4 mr-1" />
                    {action.text}
                  </button>
                ))}
              </div>
            </div>
          )}

          {/* Input */}
          <div className="p-4 border-t">
            <div className="flex items-center space-x-2">
              <input
                type="text"
                value={inputValue}
                onChange={(e) => setInputValue(e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                placeholder="Digite sua mensagem..."
                className="flex-1 p-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
              />
              <Button onClick={handleSendMessage} className="p-2">
                <Send className="h-4 w-4" />
              </Button>
            </div>
          </div>
        </div>
      )}
    </>
  )
}