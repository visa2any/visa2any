{
  "description": "N8N workflow for Visa2Any automation platform",
  "name": "Client Notifications - SQLite Compatible",
  "version": 1,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "client-notification",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "notification-webhook",
      "name": "Notification Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ],
      "webhookId": "client-notification",
      "description": ""
    },
    {
      "parameters": {
        "jsCode": "// Process notification trigger\nconst data = $json.body || $json;\n\n// Validate webhook secret\nif ($json.headers && $json.headers['x-webhook-secret'] !== 'visa2any_webhook_secret_2024') {\n  throw new Error('Invalid webhook secret');\n}\n\nconst notificationData = {\n  clientId: data.clientId,\n  type: data.type, // WELCOME, ANALYSIS_READY, PAYMENT_CONFIRMED, etc.\n  clientName: data.clientName || 'Cliente',\n  clientEmail: data.clientEmail,\n  clientPhone: data.clientPhone,\n  targetCountry: data.targetCountry || '',\n  visaType: data.visaType || '',\n  variables: data.variables || {},\n  priority: data.priority || 'MEDIUM',\n  channels: data.channels || ['whatsapp', 'email'],\n  processedAt: new Date().toISOString(),\n  notificationId: `notif_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n};\n\n// Define notification templates\nconst templates = {\n  WELCOME: {\n    whatsapp: 'welcome',\n    email: 'welcome_email',\n    subject: 'Bem-vindo Ã  Visa2Any!'\n  },\n  ANALYSIS_READY: {\n    whatsapp: 'analysis_ready',\n    email: 'analysis_complete',\n    subject: 'Sua anÃ¡lise estÃ¡ pronta!'\n  },\n  PAYMENT_CONFIRMED: {\n    whatsapp: 'payment_confirmation',\n    email: 'payment_receipt',\n    subject: 'Pagamento confirmado'\n  },\n  CONSULTATION_REMINDER: {\n    whatsapp: 'consultation_reminder',\n    email: 'consultation_reminder_email',\n    subject: 'Lembrete: Sua consultoria Ã© amanhÃ£'\n  },\n  DOCUMENT_APPROVED: {\n    whatsapp: 'document_approved',\n    email: 'document_status_email',\n    subject: 'Documento aprovado!'\n  }\n};\n\nnotificationData.templates = templates[notificationData.type] || templates.WELCOME;\n\nconsole.log('ðŸ“§ Notification processed:', notificationData.notificationId);\nconsole.log('Type:', notificationData.type);\nconsole.log('Channels:', notificationData.channels);\n\nreturn [{ json: notificationData }];"
      },
      "id": "process-notification",
      "name": "Process Notification",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        300
      ],
      "description": ""
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "whatsapp-enabled",
              "leftValue": "={{ $json.channels.includes('whatsapp') }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-whatsapp-enabled",
      "name": "WhatsApp Enabled?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        680,
        200
      ],
      "description": ""
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "email-enabled",
              "leftValue": "={{ $json.channels.includes('email') }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-email-enabled",
      "name": "Email Enabled?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        680,
        400
      ],
      "description": ""
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/notifications/whatsapp",
        "options": {
          "headers": {
            "Content-Type": "application/json"
          },
          "timeout": 30000
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  to: $json.clientPhone,\n  message: '',\n  clientId: $json.clientId,\n  template: $json.templates.whatsapp,\n  variables: {\n    ...$json.variables,\n    client_name: $json.clientName,\n    target_country: $json.targetCountry,\n    visa_type: $json.visaType\n  }\n}) }}"
      },
      "id": "send-whatsapp-notification",
      "name": "Send WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        900,
        200
      ],
      "description": ""
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/notifications/email",
        "options": {
          "headers": {
            "Content-Type": "application/json"
          },
          "timeout": 30000
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  to: $json.clientEmail,\n  subject: $json.templates.subject,\n  template: $json.templates.email,\n  clientId: $json.clientId,\n  variables: {\n    ...$json.variables,\n    client_name: $json.clientName,\n    target_country: $json.targetCountry,\n    visa_type: $json.visaType\n  }\n}) }}"
      },
      "id": "send-email-notification",
      "name": "Send Email",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        900,
        400
      ],
      "description": ""
    },
    {
      "parameters": {
        "jsCode": "// Merge all notification results\nconst notificationData = $('process-notification').item.json;\nconst whatsappResult = $('send-whatsapp-notification').first()?.json;\nconst emailResult = $('send-email-notification').first()?.json;\n\nconst results = {\n  notificationId: notificationData.notificationId,\n  clientId: notificationData.clientId,\n  type: notificationData.type,\n  channels: {\n    whatsapp: {\n      attempted: !!whatsappResult,\n      success: whatsappResult?.success || false,\n      messageId: whatsappResult?.data?.messageId || null,\n      error: whatsappResult?.error || null\n    },\n    email: {\n      attempted: !!emailResult,\n      success: emailResult?.success || false,\n      messageId: emailResult?.messageId || null,\n      error: emailResult?.error || null\n    }\n  },\n  overallSuccess: (whatsappResult?.success !== false) && (emailResult?.success !== false),\n  processedAt: notificationData.processedAt,\n  completedAt: new Date().toISOString()\n};\n\nconsole.log('ðŸ“Š Notification completed:', results.notificationId);\nconsole.log('Overall success:', results.overallSuccess);\nconsole.log('WhatsApp:', results.channels.whatsapp.success);\nconsole.log('Email:', results.channels.email.success);\n\nreturn [{ json: results }];"
      },
      "id": "merge-results",
      "name": "Merge Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1120,
        300
      ],
      "description": ""
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/n8n/webhook",
        "options": {
          "headers": {
            "Content-Type": "application/json",
            "x-webhook-secret": "visa2any_webhook_secret_2024"
          }
        },
        "sendBody": true,
        "bodyContentType": "json",
        "jsonBody": "={{ JSON.stringify({\n  action: 'log_notification',\n  data: {\n    id: 'notif_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9),\n    type: 'NOTIFICATION_' + $json.type,\n    action: 'multi_channel_notification',\n    details: JSON.stringify($json),\n    success: $json.overallSuccess,\n    client_id: $json.clientId,\n    executed_at: $json.completedAt\n  }\n}) }}"
      },
      "id": "log-notification-result",
      "name": "Log to Database",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1340,
        300
      ],
      "description": ""
    }
  ],
  "connections": {
    "Notification Trigger": {
      "main": [
        [
          {
            "node": "Process Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Notification": {
      "main": [
        [
          {
            "node": "WhatsApp Enabled?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Email Enabled?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WhatsApp Enabled?": {
      "main": [
        [
          {
            "node": "Send WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Enabled?": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send WhatsApp": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "main": [
        [
          {
            "node": "Merge Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Results": {
      "main": [
        [
          {
            "node": "Log to SQLite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "timezone": "America/Sao_Paulo",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {},
  "tags": [
    {
      "id": "notifications",
      "name": "Notifications",
      "description": ""
    },
    {
      "id": "visa2any",
      "name": "Visa2Any",
      "description": ""
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-06-14T08:00:00.000Z",
  "versionId": "1"
}