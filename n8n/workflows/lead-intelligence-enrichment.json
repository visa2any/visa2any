{
  "description": "N8N workflow for Visa2Any automation platform",
  "name": "Lead Intelligence & Enrichment",
  "version": 1,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "new-lead",
        "options": {
          "noResponseBody": false
        }
      },
      "id": "new-lead-webhook",
      "name": "New Lead Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "webhookId": "new-lead",
      "description": ""
    },
    {
      "parameters": {
        "jsCode": "// Extract and validate lead data\nconst body = $json.body;\nconst headers = $json.headers;\n\n// Validate webhook secret\nif (headers['x-webhook-secret'] !== 'visa2any_webhook_secret_2024') {\n  throw new Error('Invalid webhook secret');\n}\n\nconst leadData = {\n  leadId: body.leadId || `LEAD_${Date.now()}`,\n  name: body.name,\n  email: body.email,\n  phone: body.phone,\n  cpf: body.cpf || null,\n  targetCountry: body.targetCountry || 'UNKNOWN',\n  visaType: body.visaType || 'TOURIST',\n  budget: body.budget || null,\n  urgency: body.urgency || 'MEDIUM',\n  source: body.source || 'WEBSITE',\n  utm_source: body.utm_source || null,\n  utm_medium: body.utm_medium || null,\n  utm_campaign: body.utm_campaign || null,\n  referralCode: body.referralCode || null,\n  socialMedia: body.socialMedia || null,\n  createdAt: new Date().toISOString()\n};\n\n// Validate required fields\nconst requiredFields = ['name', 'email'];\nfor (const field of requiredFields) {\n  if (!leadData[field]) {\n    throw new Error(`Missing required field: ${field}`);\n  }\n}\n\n// Initial scoring based on available data\nlet initialScore = 50; // Base score\n\nif (leadData.phone) initialScore += 10;\nif (leadData.cpf) initialScore += 15;\nif (leadData.budget && leadData.budget !== 'LOW') initialScore += 10;\nif (leadData.urgency === 'HIGH') initialScore += 15;\nif (['USA', 'CANADA', 'AUSTRALIA', 'UK'].includes(leadData.targetCountry)) initialScore += 10;\n\nreturn [{ json: { ...leadData, initialScore } }];"
      },
      "id": "validate-lead-data",
      "name": "Validate Lead Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        200,
        0
      ],
      "description": ""
    },
    {
      "parameters": {
        "url": "https://api.serasa.com.br/v1/credit-check",
        "options": {
          "headers": {
            "Authorization": "Bearer {{ $env.SERASA_API_TOKEN }}",
            "Content-Type": "application/json"
          },
          "body": {
            "cpf": "{{ $json.cpf }}",
            "name": "{{ $json.name }}",
            "requestType": "BASIC_PROFILE"
          }
        },
        "method": "POST"
      },
      "id": "serasa-credit-check",
      "name": "Serasa Credit Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        400,
        -100
      ],
      "continueOnFail": true,
      "description": ""
    },
    {
      "parameters": {
        "url": "https://api.spcbrasil.org.br/v1/consulta",
        "options": {
          "headers": {
            "Authorization": "Bearer {{ $env.SPC_API_TOKEN }}",
            "Content-Type": "application/json"
          },
          "body": {
            "cpf": "{{ $json.cpf }}",
            "produto": "SCORE_CREDITO"
          }
        },
        "method": "POST"
      },
      "id": "spc-score-check",
      "name": "SPC Score Check",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        400,
        0
      ],
      "continueOnFail": true,
      "description": ""
    },
    {
      "parameters": {
        "url": "https://graph.facebook.com/v18.0/search",
        "options": {
          "headers": {
            "Authorization": "Bearer {{ $env.FACEBOOK_ACCESS_TOKEN }}"
          },
          "qs": {
            "type": "user",
            "q": "{{ $json.name }} {{ $json.email }}",
            "fields": "name,location,education,work,relationship_status"
          }
        }
      },
      "id": "facebook-profile-search",
      "name": "Facebook Profile Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        400,
        100
      ],
      "continueOnFail": true,
      "description": ""
    },
    {
      "parameters": {
        "url": "https://api.linkedin.com/v2/people/email={{ $json.email }}",
        "options": {
          "headers": {
            "Authorization": "Bearer {{ $env.LINKEDIN_ACCESS_TOKEN }}",
            "Content-Type": "application/json"
          }
        }
      },
      "id": "linkedin-profile-search",
      "name": "LinkedIn Profile Search",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        400,
        200
      ],
      "continueOnFail": true,
      "description": ""
    },
    {
      "parameters": {
        "jsCode": "// Consolidate all enrichment data\nconst leadData = $('validate-lead-data').item.json;\nconst serasaData = $('serasa-credit-check').item?.json || null;\nconst spcData = $('spc-score-check').item?.json || null;\nconst facebookData = $('facebook-profile-search').item?.json || null;\nconst linkedinData = $('linkedin-profile-search').item?.json || null;\n\n// Process credit data\nlet creditProfile = {\n  score: null,\n  classification: 'UNKNOWN',\n  restrictions: false,\n  income_estimate: null\n};\n\nif (serasaData && !serasaData.error) {\n  creditProfile.score = serasaData.score || null;\n  creditProfile.classification = serasaData.classification || 'UNKNOWN';\n  creditProfile.restrictions = serasaData.restrictions || false;\n  creditProfile.income_estimate = serasaData.estimated_income || null;\n}\n\nif (spcData && !spcData.error && !creditProfile.score) {\n  creditProfile.score = spcData.score || null;\n  creditProfile.classification = spcData.risk_class || 'UNKNOWN';\n}\n\n// Process social media data\nlet socialProfile = {\n  facebook: null,\n  linkedin: null,\n  education_level: 'UNKNOWN',\n  employment_status: 'UNKNOWN',\n  relationship_status: 'UNKNOWN',\n  location: null\n};\n\nif (facebookData && facebookData.data && facebookData.data.length > 0) {\n  const fbProfile = facebookData.data[0];\n  socialProfile.facebook = {\n    name: fbProfile.name,\n    location: fbProfile.location?.name || null,\n    education: fbProfile.education || null,\n    work: fbProfile.work || null,\n    relationship: fbProfile.relationship_status || null\n  };\n  \n  if (fbProfile.education && fbProfile.education.length > 0) {\n    const highestEd = fbProfile.education[0];\n    if (highestEd.type === 'Graduate School') socialProfile.education_level = 'POST_GRADUATE';\n    else if (highestEd.type === 'College') socialProfile.education_level = 'GRADUATE';\n    else socialProfile.education_level = 'HIGH_SCHOOL';\n  }\n  \n  if (fbProfile.work && fbProfile.work.length > 0) {\n    socialProfile.employment_status = 'EMPLOYED';\n  }\n}\n\nif (linkedinData && !linkedinData.error) {\n  socialProfile.linkedin = {\n    headline: linkedinData.headline || null,\n    industry: linkedinData.industry || null,\n    location: linkedinData.location?.name || null,\n    positions: linkedinData.positions || null\n  };\n  \n  if (linkedinData.positions && linkedinData.positions.length > 0) {\n    socialProfile.employment_status = 'EMPLOYED';\n  }\n}\n\n// Calculate enriched lead score\nlet enrichedScore = leadData.initialScore;\n\n// Credit scoring impact\nif (creditProfile.score) {\n  if (creditProfile.score >= 700) enrichedScore += 20;\n  else if (creditProfile.score >= 500) enrichedScore += 10;\n  else if (creditProfile.score >= 300) enrichedScore += 5;\n  else enrichedScore -= 10;\n}\n\nif (creditProfile.restrictions) enrichedScore -= 15;\nif (creditProfile.income_estimate && creditProfile.income_estimate > 5000) enrichedScore += 15;\n\n// Social profile impact\nif (socialProfile.education_level === 'POST_GRADUATE') enrichedScore += 15;\nelse if (socialProfile.education_level === 'GRADUATE') enrichedScore += 10;\n\nif (socialProfile.employment_status === 'EMPLOYED') enrichedScore += 10;\nif (socialProfile.linkedin) enrichedScore += 5;\nif (socialProfile.facebook) enrichedScore += 3;\n\n// Determine lead quality\nlet leadQuality = 'LOW';\nif (enrichedScore >= 80) leadQuality = 'HOT';\nelse if (enrichedScore >= 65) leadQuality = 'WARM';\nelse if (enrichedScore >= 50) leadQuality = 'MEDIUM';\n\n// Assign ideal consultant type\nlet consultantType = 'JUNIOR';\nif (leadQuality === 'HOT') consultantType = 'SENIOR';\nelse if (leadQuality === 'WARM') consultantType = 'MID_LEVEL';\n\n// Determine priority level\nlet priority = 'MEDIUM';\nif (leadQuality === 'HOT') priority = 'URGENT';\nelse if (leadQuality === 'WARM') priority = 'HIGH';\n\nreturn [{\n  json: {\n    ...leadData,\n    enrichment: {\n      creditProfile,\n      socialProfile,\n      enrichedScore,\n      leadQuality,\n      consultantType,\n      priority,\n      enrichedAt: new Date().toISOString(),\n      dataQuality: {\n        hasCredit: !!creditProfile.score,\n        hasSocial: !!(socialProfile.facebook || socialProfile.linkedin),\n        completeness: calculateCompleteness(leadData, creditProfile, socialProfile)\n      }\n    }\n  }\n}];\n\nfunction calculateCompleteness(lead, credit, social) {\n  let score = 0;\n  let total = 10;\n  \n  if (lead.name) score++;\n  if (lead.email) score++;\n  if (lead.phone) score++;\n  if (lead.cpf) score++;\n  if (lead.targetCountry !== 'UNKNOWN') score++;\n  if (credit.score) score++;\n  if (credit.income_estimate) score++;\n  if (social.education_level !== 'UNKNOWN') score++;\n  if (social.employment_status !== 'UNKNOWN') score++;\n  if (social.linkedin || social.facebook) score++;\n  \n  return Math.round((score / total) * 100);\n}"
      },
      "id": "consolidate-enrichment",
      "name": "Consolidate Enrichment",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        600,
        0
      ],
      "description": ""
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/n8n/webhook",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "",
        "options": {
          "headers": {
            "Content-Type": "application/json",
            "x-webhook-secret": "visa2any_webhook_secret_2024"
          }
        },
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\n  action: 'find_ideal_consultant',\n  data: {\n    consultantType: $json.enrichment.consultantType,\n    query: 'SELECT c.id, c.name, c.email, cs.availability, cs.specialties, cs.performance_score FROM consultants c LEFT JOIN consultant_stats cs ON c.id = cs.consultant_id WHERE c.status = ? AND c.type = ? ORDER BY cs.performance_score DESC, cs.availability DESC LIMIT 3',\n    values: ['ACTIVE', $json.enrichment.consultantType]\n  }\n}) }}"
      },
      "id": "find-ideal-consultant",
      "name": "Find Ideal Consultant",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        800,
        0
      ],
      "description": ""
    },
    {
      "parameters": {
        "jsCode": "// Select best consultant and prepare assignment\nconst leadData = $('consolidate-enrichment').item.json;\nconst consultants = $input.all().map(item => item.json);\n\nlet assignedConsultant = null;\n\nif (consultants.length > 0) {\n  // Find consultant that specializes in target country\n  const countrySpecialist = consultants.find(c => \n    c.specialties && c.specialties.includes(leadData.targetCountry)\n  );\n  \n  assignedConsultant = countrySpecialist || consultants[0];\n}\n\n// Prepare personalized nurturing sequence based on enrichment\nlet nurtureSequence = 'STANDARD';\nlet customMessage = '';\n\nswitch (leadData.enrichment.leadQuality) {\n  case 'HOT':\n    nurtureSequence = 'VIP_FAST_TRACK';\n    customMessage = `Lead VIP detectado! Score: ${leadData.enrichment.enrichedScore}. Perfil Premium com alta capacidade financeira.`;\n    break;\n  case 'WARM':\n    nurtureSequence = 'PREMIUM_ACCELERATED';\n    customMessage = `Lead Premium! Score: ${leadData.enrichment.enrichedScore}. Perfil qualificado com bom potencial.`;\n    break;\n  case 'MEDIUM':\n    nurtureSequence = 'STANDARD_NURTURING';\n    customMessage = `Lead padrão. Score: ${leadData.enrichment.enrichedScore}. Potencial moderado.`;\n    break;\n  default:\n    nurtureSequence = 'EDUCATIONAL_SEQUENCE';\n    customMessage = `Lead para educação. Score: ${leadData.enrichment.enrichedScore}. Necessita mais qualificação.`;\n}\n\n// Prepare initial contact strategy\nlet contactStrategy = {\n  channel: 'WHATSAPP',\n  timing: 'IMMEDIATE',\n  tone: 'PROFESSIONAL',\n  offer: 'CONSULTATION'\n};\n\nif (leadData.enrichment.leadQuality === 'HOT') {\n  contactStrategy = {\n    channel: 'PHONE_CALL',\n    timing: 'WITHIN_30MIN',\n    tone: 'VIP',\n    offer: 'IMMEDIATE_CONSULTATION'\n  };\n} else if (leadData.enrichment.leadQuality === 'WARM') {\n  contactStrategy = {\n    channel: 'WHATSAPP_PRIORITY',\n    timing: 'WITHIN_2HOURS',\n    tone: 'PERSONALIZED',\n    offer: 'PRIORITY_CONSULTATION'\n  };\n}\n\nreturn [{\n  json: {\n    ...leadData,\n    assignment: {\n      consultant: assignedConsultant,\n      nurtureSequence,\n      contactStrategy,\n      customMessage,\n      assignedAt: new Date().toISOString()\n    }\n  }\n}];"
      },
      "id": "assign-consultant",
      "name": "Assign Consultant",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        0
      ],
      "description": ""
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/n8n/webhook",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "",
        "options": {
          "headers": {
            "Content-Type": "application/json",
            "x-webhook-secret": "visa2any_webhook_secret_2024"
          }
        },
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ JSON.stringify({\n  action: 'save_enriched_lead',\n  data: {\n    leadId: $json.leadId,\n    name: $json.name,\n    email: $json.email,\n    phone: $json.phone,\n    cpf: $json.cpf,\n    targetCountry: $json.targetCountry,\n    visaType: $json.visaType,\n    budget: $json.budget,\n    urgency: $json.urgency,\n    source: $json.source,\n    creditScore: $json.enrichment.creditProfile.score,\n    socialProfile: JSON.stringify($json.enrichment.socialProfile),\n    enrichedScore: $json.enrichment.enrichedScore,\n    leadQuality: $json.enrichment.leadQuality,\n    assignedConsultant: $json.assignment.consultant?.id,\n    nurtureSequence: $json.assignment.nurtureSequence,\n    createdAt: $json.createdAt,\n    query: 'INSERT INTO enriched_leads (lead_id, name, email, phone, cpf, target_country, visa_type, budget, urgency, source, credit_score, social_profile, enriched_score, lead_quality, assigned_consultant, nurture_sequence, created_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'\n  }\n}) }}"
      },
      "id": "save-enriched-lead",
      "name": "Save Enriched Lead",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1200,
        0
      ],
      "description": ""
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.assignment.contactStrategy.timing }}",
              "operation": "equal",
              "value2": "WITHIN_30MIN"
            }
          ]
        }
      },
      "id": "urgent-contact-check",
      "name": "Urgent Contact?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1400,
        0
      ],
      "description": ""
    },
    {
      "parameters": {
        "jsCode": "// Prepare immediate VIP contact\nconst data = $json;\nconst consultant = data.assignment.consultant;\n\nconst urgentMessage = `🚨 *LEAD VIP URGENT* 🚨\\n\\n` +\n  `👤 *Nome:* ${data.name}\\n` +\n  `📧 *Email:* ${data.email}\\n` +\n  `📱 *Telefone:* ${data.phone}\\n` +\n  `🌍 *País:* ${data.targetCountry}\\n` +\n  `📊 *Score:* ${data.enrichment.enrichedScore}/100\\n` +\n  `💰 *Orçamento:* ${data.budget}\\n` +\n  `⚡ *Urgência:* ${data.urgency}\\n\\n` +\n  `🎯 *Ação:* LIGAR EM 30 MINUTOS!\\n` +\n  `👨‍💼 *Consultor:* ${consultant?.name || 'A definir'}`;\n\nconst whatsappMessage = `🌟 Olá ${data.name}! Sou ${consultant?.name || 'da equipe'} da Visa2Any\\n\\n` +\n  `🎯 Vi seu interesse em visto para ${data.targetCountry}\\n\\n` +\n  `⚡ Como você demonstrou urgência, vou te ligar em 15 minutos para uma consultoria EXPRESS!\\n\\n` +\n  `📞 Estará disponível no ${data.phone}?\\n\\n` +\n  `🌟 Vamos acelerar seu processo!`;\n\nreturn [{\n  json: {\n    ...data,\n    urgentNotification: {\n      teamMessage: urgentMessage,\n      clientMessage: whatsappMessage,\n      callScheduled: new Date(Date.now() + 30 * 60 * 1000).toISOString() // 30 min from now\n    }\n  }\n}];"
      },
      "id": "prepare-urgent-contact",
      "name": "Prepare Urgent Contact",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        -100
      ],
      "description": ""
    },
    {
      "parameters": {
        "message": "{{ $json.urgentNotification.teamMessage }}",
        "chatId": "-1001234567890",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "urgent-team-alert",
      "name": "Urgent Team Alert",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 4,
      "position": [
        1800,
        -150
      ],
      "description": ""
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/notifications/whatsapp",
        "options": {
          "headers": {
            "Content-Type": "application/json",
            "Authorization": "Bearer {{ $env.VISA2ANY_API_TOKEN }}"
          },
          "body": {
            "phone": "{{ $json.phone }}",
            "message": "{{ $json.urgentNotification.clientMessage }}",
            "priority": "URGENT",
            "leadId": "{{ $json.leadId }}",
            "campaign": "VIP_IMMEDIATE_CONTACT"
          }
        }
      },
      "id": "urgent-whatsapp",
      "name": "Urgent WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1800,
        -50
      ],
      "description": ""
    },
    {
      "parameters": {
        "jsCode": "// Prepare standard nurturing activation\nconst data = $json;\nconst consultant = data.assignment.consultant;\n\nlet nurtureMessage = '';\n\nswitch (data.assignment.nurtureSequence) {\n  case 'PREMIUM_ACCELERATED':\n    nurtureMessage = `👋 Olá ${data.name}! Sou ${consultant?.name || 'da equipe'} da Visa2Any\\n\\n` +\n      `🌟 Vi seu interesse em visto para ${data.targetCountry}\\n\\n` +\n      `✨ Seu perfil é muito interessante! Vou te enviar informações personalizadas\\n\\n` +\n      `📞 Posso te ligar hoje para uma consultoria gratuita?`;\n    break;\n    \n  case 'STANDARD_NURTURING':\n    nurtureMessage = `👋 Oi ${data.name}! Aqui é ${consultant?.name || 'da equipe'} da Visa2Any\\n\\n` +\n      `🌍 Que legal seu interesse em ${data.targetCountry}!\\n\\n` +\n      `📋 Vou te enviar um guia completo sobre o processo\\n\\n` +\n      `💬 Qualquer dúvida, pode me chamar!`;\n    break;\n    \n  default:\n    nurtureMessage = `👋 Olá ${data.name}! Obrigado pelo interesse na Visa2Any\\n\\n` +\n      `📚 Vou te enviar materiais educativos sobre visto para ${data.targetCountry}\\n\\n` +\n      `🎯 Vamos te ajudar a entender todo o processo!`;\n}\n\nreturn [{\n  json: {\n    ...data,\n    standardNurture: {\n      message: nurtureMessage,\n      sequence: data.assignment.nurtureSequence,\n      consultant: consultant?.name || 'Equipe Visa2Any'\n    }\n  }\n}];"
      },
      "id": "prepare-standard-nurture",
      "name": "Prepare Standard Nurture",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1600,
        100
      ],
      "description": ""
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/automation/nurturing",
        "options": {
          "headers": {
            "Content-Type": "application/json",
            "Authorization": "Bearer {{ $env.VISA2ANY_API_TOKEN }}"
          },
          "body": {
            "leadId": "{{ $json.leadId }}",
            "sequenceType": "{{ $json.assignment.nurtureSequence }}",
            "priority": "{{ $json.enrichment.priority }}",
            "consultant": "{{ $json.assignment.consultant?.id }}",
            "personalData": {
              "name": "{{ $json.name }}",
              "targetCountry": "{{ $json.targetCountry }}",
              "visaType": "{{ $json.visaType }}",
              "leadQuality": "{{ $json.enrichment.leadQuality }}",
              "enrichedScore": "{{ $json.enrichment.enrichedScore }}"
            },
            "triggerImmediately": true
          }
        }
      },
      "id": "activate-nurture-sequence",
      "name": "Activate Nurture Sequence",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1800,
        50
      ],
      "description": ""
    },
    {
      "parameters": {
        "url": "http://localhost:3000/api/notifications/whatsapp",
        "options": {
          "headers": {
            "Content-Type": "application/json",
            "Authorization": "Bearer {{ $env.VISA2ANY_API_TOKEN }}"
          },
          "body": {
            "phone": "{{ $json.phone }}",
            "message": "{{ $json.standardNurture.message }}",
            "priority": "{{ $json.enrichment.priority }}",
            "leadId": "{{ $json.leadId }}",
            "campaign": "ENRICHED_LEAD_NURTURE"
          }
        }
      },
      "id": "send-nurture-whatsapp",
      "name": "Send Nurture WhatsApp",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1800,
        150
      ],
      "description": ""
    },
    {
      "parameters": {
        "message": "📈 *LEAD ENRICHMENT COMPLETE*\\n\\n👤 *Lead:* {{ $json.name }}\\n📧 *Email:* {{ $json.email }}\\n🌍 *País:* {{ $json.targetCountry }}\\n\\n📊 *Enrichment Results:*\\n• Score: {{ $json.enrichment.enrichedScore }}/100\\n• Quality: {{ $json.enrichment.leadQuality }}\\n• Credit Score: {{ $json.enrichment.creditProfile.score || 'N/A' }}\\n• Social Data: {{ $json.enrichment.dataQuality.hasSocial ? '✅' : '❌' }}\\n\\n👨‍💼 *Assigned:* {{ $json.assignment.consultant?.name || 'Auto-assign' }}\\n🎯 *Sequence:* {{ $json.assignment.nurtureSequence }}\\n⚡ *Priority:* {{ $json.enrichment.priority }}\\n\\n💡 *Strategy:* {{ $json.assignment.contactStrategy.channel }} ({{ $json.assignment.contactStrategy.timing }})",
        "chatId": "-1001234567890",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "notify-enrichment-complete",
      "name": "Notify Enrichment Complete",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 4,
      "position": [
        2000,
        0
      ],
      "description": ""
    }
  ],
  "connections": {
    "New Lead Webhook": {
      "main": [
        [
          {
            "node": "Validate Lead Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Lead Data": {
      "main": [
        [
          {
            "node": "Serasa Credit Check",
            "type": "main",
            "index": 0
          },
          {
            "node": "SPC Score Check",
            "type": "main",
            "index": 0
          },
          {
            "node": "Facebook Profile Search",
            "type": "main",
            "index": 0
          },
          {
            "node": "LinkedIn Profile Search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Serasa Credit Check": {
      "main": [
        [
          {
            "node": "Consolidate Enrichment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SPC Score Check": {
      "main": [
        [
          {
            "node": "Consolidate Enrichment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Profile Search": {
      "main": [
        [
          {
            "node": "Consolidate Enrichment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn Profile Search": {
      "main": [
        [
          {
            "node": "Consolidate Enrichment",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consolidate Enrichment": {
      "main": [
        [
          {
            "node": "Find Ideal Consultant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Ideal Consultant": {
      "main": [
        [
          {
            "node": "Assign Consultant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assign Consultant": {
      "main": [
        [
          {
            "node": "Save Enriched Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Enriched Lead": {
      "main": [
        [
          {
            "node": "Urgent Contact?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Urgent Contact?": {
      "main": [
        [
          {
            "node": "Prepare Urgent Contact",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Prepare Standard Nurture",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Urgent Contact": {
      "main": [
        [
          {
            "node": "Urgent Team Alert",
            "type": "main",
            "index": 0
          },
          {
            "node": "Urgent WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Standard Nurture": {
      "main": [
        [
          {
            "node": "Activate Nurture Sequence",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Nurture WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Urgent Team Alert": {
      "main": [
        [
          {
            "node": "Notify Enrichment Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Urgent WhatsApp": {
      "main": [
        [
          {
            "node": "Notify Enrichment Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Activate Nurture Sequence": {
      "main": [
        [
          {
            "node": "Notify Enrichment Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Nurture WhatsApp": {
      "main": [
        [
          {
            "node": "Notify Enrichment Complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "timezone": "America/Sao_Paulo"
  }
}