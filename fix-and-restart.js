const fs = require('fs')
const { spawn } = require('child_process')

console.log('üîß Corrigindo problemas e reiniciando servidor...\n')

// 1. Limpar caches
console.log('1Ô∏è‚É£ Limpando todos os caches...')
try {
  if (fs.existsSync('.next')) {
    fs.rmSync('.next', { recursive: true, force: true })
    console.log('‚úÖ Cache .next removido')
  }
  
  if (fs.existsSync('node_modules/.cache')) {
    fs.rmSync('node_modules/.cache', { recursive: true, force: true })
    console.log('‚úÖ Cache node_modules removido')
  }
  
  if (fs.existsSync('.turbo')) {
    fs.rmSync('.turbo', { recursive: true, force: true })
    console.log('‚úÖ Cache turbo removido')
  }
} catch (error) {
  console.log('‚ö†Ô∏è Erro ao limpar cache:', error.message)
}

// 2. Verificar arquivo problem√°tico
console.log('\n2Ô∏è‚É£ Verificando arquivo layout.tsx...')
try {
  const layoutContent = fs.readFileSync('src/app/admin/layout.tsx', 'utf8')
  
  // Verificar se tem caracteres estranhos
  const hasInvalidChars = /[^\x00-\x7F]/.test(layoutContent)
  if (hasInvalidChars) {
    console.log('‚ùå Encontrados caracteres n√£o-ASCII no arquivo')
  } else {
    console.log('‚úÖ Arquivo parece estar limpo')
  }
  
  // Verificar estrutura b√°sica
  if (layoutContent.includes('export default function AdminLayout') && 
      layoutContent.includes('function SidebarContent')) {
    console.log('‚úÖ Estrutura do arquivo correta')
  } else {
    console.log('‚ùå Estrutura do arquivo pode estar corrompida')
  }
  
} catch (error) {
  console.log('‚ùå Erro ao verificar arquivo:', error.message)
}

// 3. Instru√ß√µes para o usu√°rio
console.log('\n3Ô∏è‚É£ Pr√≥ximos passos:')
console.log('1. Execute: npm run dev')
console.log('2. Aguarde a compila√ß√£o completa (pode demorar)')
console.log('3. Se ainda houver erro, pare o servidor e execute:')
console.log('   - Ctrl+C para parar')
console.log('   - rm -rf .next && npm run dev')
console.log('\n4Ô∏è‚É£ URLs para testar:')
console.log('üåê Home: http://localhost:3000')
console.log('üë§ Admin: http://localhost:3000/admin/login')
console.log('üîë Credenciais: admin@visa2any.com / admin123')

console.log('\n‚ú® Limpeza conclu√≠da! Execute npm run dev agora.')

// Verificar se o problema persiste
function checkSyntax() {
  console.log('\nüîç Verificando sintaxe do TypeScript...')
  
  const tsc = spawn('npx', ['tsc', '--noEmit', '--skipLibCheck'], {
    stdio: 'pipe'
  })
  
  let output = ''
  tsc.stdout.on('data', (data) => {
    output += data.toString()
  })
  
  tsc.stderr.on('data', (data) => {
    output += data.toString()
  })
  
  tsc.on('close', (code) => {
    if (code === 0) {
      console.log('‚úÖ Nenhum erro de TypeScript encontrado')
    } else {
      console.log('‚ùå Erros de TypeScript encontrados:')
      console.log(output)
    }
  })
}

// Executar verifica√ß√£o de sintaxe (opcional)
// checkSyntax()